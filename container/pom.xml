<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.sdo.aio</groupId>
  <artifactId>container</artifactId>
  <version>1.10.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <parent>
    <groupId>org.sdo</groupId>
    <artifactId>aio</artifactId>
    <version>1.10.1-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <properties>
    <rendezvous.war>rendezvous-1.10.1-SNAPSHOT.war</rendezvous.war>
    <rvservice.war>rendezvous-service-1.10.1-SNAPSHOT.war</rvservice.war>
    <manufacturer.war>manufacturer-webapp-1.10.1-SNAPSHOT.war</manufacturer.war>
    <to0service.war>to0serviceimpl-1.10.1-SNAPSHOT.war</to0service.war>
    <ops.war>opsimpl-1.10.1-SNAPSHOT.war</ops.war>
    <ocs.war>ocsfs-1.10.1-SNAPSHOT.war</ocs.war>
    <tomcat.folder>apache-tomcat-9.0.43</tomcat.folder>
    <tomcat.url>https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.43/bin/apache-tomcat-9.0.43.zip</tomcat.url>
    <project.demo.directory>../demo</project.demo.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.sdo</groupId>
      <artifactId>rendezvous</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20200518</version>
    </dependency>

    <dependency>
      <groupId>org.sdo.rendezvous</groupId>
      <artifactId>rendezvous-service</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.sdo.sct</groupId>
      <artifactId>manufacturer-webapp</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.sdo.iotplatformsdk.to0service</groupId>
      <artifactId>to0serviceimpl</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.sdo.iotplatformsdk.ocs</groupId>
      <artifactId>ocsfs</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>org.sdo.iotplatformsdk.ops</groupId>
      <artifactId>opsimpl</artifactId>
      <version>1.10.1-SNAPSHOT</version>
      <type>war</type>
    </dependency>

    <!-- aio services-->
    <dependency>
      <groupId>org.sdo.demo</groupId>
      <artifactId>services</artifactId>
      <version>1.10.1-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.30</version>
   </dependency>

    <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.200</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.7.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>building web container</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="downloading tomcat binary image" />
                <!-- download file -->
                <get src="${tomcat.url}"
                  dest="${project.build.directory}/${tomcat.folder}.zip"
                  verbose="false"
                  usetimestamp="true"/>

                <!-- Create base directory -->
                <mkdir dir="${project.build.directory}/deploy/"/>

                <echo message="unzipping tomcat" />
                <unzip src="${project.build.directory}/${tomcat.folder}.zip"
                  dest="${project.build.directory}/deploy/aio" />

                <echo message="removing version from tomcat folder" />
                <move todir="${project.build.directory}/deploy/aio/tomcat">
                  <fileset dir="${project.build.directory}/deploy/aio/${tomcat.folder}"/>
                </move>

                <echo message="delete existing webapps" />
                <delete includeemptydirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps"
                    includes="**/*"/>
                </delete>

                <echo message="unwar webapps" />
                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/rps">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${rendezvous.war}"/>
                  </fileset>
                </unwar>

                <echo message="unwar webapps" />
                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/rv">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${rvservice.war}"/>
                  </fileset>
                </unwar>

                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/mfs">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${manufacturer.war}"/>
                  </fileset>
                </unwar>

                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/to0">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${to0service.war}"/>
                  </fileset>
                </unwar>

                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/ops">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${ops.war}"/>
                  </fileset>
                </unwar>

                <unwar dest="${project.build.directory}/deploy/aio/tomcat/webapps/ocs">
                  <fileset dir="${project.build.directory}/dependencies">
                    <include name="${ocs.war}"/>
                  </fileset>
                </unwar>

                <echo message="trimming wars" />

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/ocs/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/ocs/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/ocs/META-INF"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/rps/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/rps/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/rps/META-INF"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/rv/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/rv/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/rv/META-INF"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/mfs/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/mfs/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/mfs/META-INF"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/to0/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/to0/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/to0/META-INF"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/ops/org"/>
                </delete>

                <delete includeEmptyDirs="true">
                  <fileset file="${project.build.directory}/deploy/aio/tomcat/webapps/ops/WEB-INF/lib/slf4j*"/>
                  <fileset dir="${project.build.directory}/deploy/aio/tomcat/webapps/ops/META-INF"/>
                </delete>

                <echo message="deleting wars" />
                <delete file="${project.build.directory}/deploy/aio/dependencies/${rendezvous.war}"/>
                <delete file="${project.build.directory}/deploy/aio/dependencies/${manufacturer.war}"/>
                <delete file="${project.build.directory}/deploy/aio/dependencies/${to0service.war}" />
                <delete file="${project.build.directory}/deploy/aio/dependencies/${ops.war}"/>
                <delete file="${project.build.directory}/deploy/aio/dependencies/${ocs.war}" />

                <echo message="copy overlay files" />
                <copy todir="${project.build.directory}/deploy/aio" overwrite="true">
                  <fileset dir="overlay"/>
                </copy>

                <echo message="move dependencies" />
                <move todir="${project.build.directory}/deploy/aio/tomcat/lib">
                  <fileset dir="${project.build.directory}/dependencies"/>
                </move>

                <mkdir dir="${project.build.directory}/deploy/aio/tomcat/db/v1/files"/>
                <mkdir dir="${project.build.directory}/deploy/aio/tomcat/db/v1/devices"/>

                <echo message="tar aio" />
                <tar tarfile="${project.demo.directory}/aio.tar.gz"
                  basedir="${project.build.directory}/deploy"
                  longfile="gnu"
                  compression="gzip" />

                <!-- Clean-up un-necessary files -->
                <delete file="${project.build.directory}/${tomcat.folder}.zip" />
              </target>
            </configuration>
          </execution>

          <execution>
            <id>move-wars</id>
            <phase>prepare-package</phase>
            <configuration>
              <target></target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeTransitive>true</excludeTransitive>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
