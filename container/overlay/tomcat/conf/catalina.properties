# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageAccess unless the
# corresponding RuntimePermission ("accessClassInPackage."+package) has
# been granted.
package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.
#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageDefinition unless the
# corresponding RuntimePermission ("defineClassInPackage."+package) has
# been granted.
#
# by default, no packages are restricted for definition, and none of
# the class loaders supplied with the JDK call checkPackageDefinition.
#
package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\
org.apache.jasper.,org.apache.naming.,org.apache.tomcat.

#
#
# List of comma-separated paths defining the contents of the "common"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank,the JVM system loader will be used as Catalina's "common"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values are enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
common.loader="${catalina.base}/lib","${catalina.base}/lib/*.jar","${catalina.home}/lib","${catalina.home}/lib/*.jar"

#
# List of comma-separated paths defining the contents of the "server"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank, the "common" loader will be used as Catalina's "server"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
server.loader=

#
# List of comma-separated paths defining the contents of the "shared"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
# the "common" loader will be used as Catalina's "shared" loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
# Please note that for single jars, e.g. bar.jar, you need the URL form
# starting with file:.
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
shared.loader=

# Default list of JAR files that should not be scanned using the JarScanner
# functionality. This is typically used to scan JARs for configuration
# information. JARs that do not contain such information may be excluded from
# the scan to speed up the scanning process. This is the default list. JARs on
# this list are excluded from all scans. The list must be a comma separated list
# of JAR file names.
# The list of JARs to skip may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
# The JARs listed below include:
# - Tomcat Bootstrap JARs
# - Tomcat API JARs
# - Catalina JARs
# - Jasper JARs
# - Tomcat JARs
# - Common non-Tomcat JARs
# - Test JARs (JUnit, Cobertura and dependencies)

tomcat.util.scan.StandardJarScanFilter.jarsToSkip=* 

# Default list of JAR files that should be scanned that overrides the default
# jarsToSkip list above. This is typically used to include a specific JAR that
# has been excluded by a broad file name pattern in the jarsToSkip list.
# The list of JARs to scan may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
tomcat.util.scan.StandardJarScanFilter.jarsToScan=\
log4j-taglib*.jar,\
log4j-web*.jar,\
log4javascript*.jar,\
slf4j-taglib*.jar

# String cache configuration.
tomcat.util.buf.StringCache.byte.enabled=true
#tomcat.util.buf.StringCache.trainThreshold=500000
#tomcat.util.buf.StringCache.cacheSize=5000


# SDO configuration
fs.root.dir=${catalina.home}/db
rest.api.server=http://localhost:8080/
rest.api.username=aio
rest.api.password=Sm9@wojk
application.version=1.9-SNAPSHOT
spring.main.banner-mode=off

# SDO H2 database ports (used internally)
db.web.port=8082
db.tcp.port=9092

# SDO paths
spring.datasource.url=jdbc:h2:tcp:localhost:${db.tcp.port}//${catalina.home}/db/mandb
org.sdo.to0.ownersign.to1d.bo=file:///${catalina.home}/db/v1/values/redirect.properties
sdo.keystore=file:///${catalina.home}/db/manufacturer-keystore.p12
client.ssl.key-store=${catalina.home}/db/ops-keystore.p12
client.ssl.trust-store=${catalina.home}/db/ops-truststore
server.ssl.key-store=${catalina.home}/db/ocs-keystore.p12
server.ssl.trust-store=${catalina.home}/db/ocs-truststore
logging.config=${catalina.home}/db/logback.xml
fs.devices.dir=v1/devices
fs.values.dir=v1/values
fs.files.dir=v1/files

# SDO Data-source configurations
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

# SDO Supply-Chain Tools Configurations
sdo.keystore.password=MfgKs@3er

# SDO IOT Platform SDK Configurations
fs.owner.keystore=owner-keystore.p12
fs.owner.keystore-password=MLP3QA!Z

org.sdo.owner.resale-supported=false
to2.credential-reuse.enabled=true

server.ssl.enabled=false
java.library.path=

# SDO IOT Platform TO0 Scheduler Configurations
to0.waitseconds=7200
to0.scheduler.interval=60
session.pool.size=20
thread.pool.size=15

# SDO IOT Platform OCS Configurations
rest.api.device.state.path=ocs/v1/devices/{deviceId}/state
rest.api.voucher.path=ocs/v1/devices/{deviceId}/voucher
rest.api.serviceinfo.path=ocs/v1/devices/{deviceId}/msgs
rest.api.serviceinfo.value.path=ocs/v1/devices/{deviceId}/values/{valueId}
rest.api.serviceinfo.marshalled.path=ocs/v1/devices/{deviceId}/msvi
rest.api.psi.path=ocs/v1/devices/{deviceId}/psi
rest.api.error.path=ocs/v1/devices/{deviceId}/errors
rest.api.setupinfo.path=ocs/v1/devices/{deviceId}/setupinfo
rest.api.signature.path=ocs/v1/signatures/{deviceId}
rest.api.ciphers.path=ocs/v1/ciphers/{deviceId}
rest.api.session.path=ocs/v1/devices/{deviceId}/sessioninfo
to0.rest.api=${rest.api.server}to0/v1/to0/devices

# SDO IOT Platform OPS onDie-ecdsa Configurations
org.sdo.ops.ondie-ecdsa-material-path=${catalina.home}/db/ondiecache
org.sdo.ops.ondie-ecdsa-material-urls=https://tsci.intel.com/content/OnDieCA/certs/,https://tsci.intel.com/content/OnDieCA/crls/
org.sdo.ops.ondie-ecdsa-material-update=false

# SDO SCT, PRI onDie-ecdsa Configurations
sdo.ondiecache.cachedir=${catalina.home}/db/ondiecache
sdo.ondiecache.revocations=false
sdo.ondiecache.urlsources=https://tsci.intel.com/content/OnDieCA/crls/
sdo.ondiecache.autoupdate=false

# IOT Platform MTLS Configurations
server.ssl.key-store-type=PKCS12
server.ssl.trust-store-type=PKCS12
server.ssl.key-store-password=RT2y!KlP5
server.ssl.trust-store-password=SN7wQ$p!1

server.ssl.client-auth=need
server.ssl.ciphers=TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256
server.ssl.enabled-protocols=TLSv1.3

client.ssl.key-store-type=PKCS12
client.ssl.trust-store-type=PKCS12
client.ssl.key-store-password=MdkRS4_L9
client.ssl.trust-store-password=BdGR@7Dj0

# No longer used but needed by springboot
org.sdo.to0.ownersign.to1d.bo.i1=127.0.0.1
org.sdo.to0.ownersign.to1d.bo.dns1=localhost
org.sdo.to0.ownersign.to1d.bo.port1=8080
org.sdo.to0.ownersign.to0d.ws=PT1H

# SDO PRI Rendezvous Service Configurations
org.sdo.epid.test-mode=false
#org.sdo.epid.epid-online-url=https://verify.epid.trustedservices.intel.com
org.sdo.pkix.trust-anchors=
org.sdo.pkix.accept-errors=UNSPECIFIED, UNDETERMINED_REVOCATION_STATUS
org.sdo.pkix.revocation-options=PREFER_CRLS, SOFT_FAIL, NO_FALLBACK
